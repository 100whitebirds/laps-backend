name: Deploy Application

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/laps"
  IMAGE_TAG: "latest"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    
    outputs:
      image_name: ${{ env.IMAGE_NAME }}
      image_tag: ${{ env.IMAGE_TAG }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            mkdir -p ~/laps
            cd ~/laps
            
            cat > .env << EOF

            APP_ENV=${{ secrets.APP_ENV || 'production' }}
            APP_NAME=${{ secrets.APP_NAME || 'laps' }}
            
            # HTTP настройки
            HTTP_PORT=${{ secrets.HTTP_PORT || '8080' }}
            
            # Postgres настройки
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST || 'localhost' }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT || '5432' }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB || 'laps' }}
            POSTGRES_SSL_MODE=${{ secrets.POSTGRES_SSL_MODE || 'disable' }}
            POSTGRES_MAX_CONNECTIONS=${{ secrets.POSTGRES_MAX_CONNECTIONS || '10' }}
            POSTGRES_MAX_IDLE_CONNECTIONS=${{ secrets.POSTGRES_MAX_IDLE_CONNECTIONS || '2' }}
            POSTGRES_MAX_LIFETIME=${{ secrets.POSTGRES_MAX_LIFETIME || '1h' }}
            
            # JWT настройки
            JWT_SIGNING_KEY=${{ secrets.JWT_SIGNING_KEY }}
            
            # Настройки логгирования
            LOG_LEVEL=${{ secrets.LOG_LEVEL || 'info' }}
            EOF
            
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            cat > docker-compose.yml << EOF
            version: '3.8'
            
            services:
              app:
                image: ${{ needs.build.outputs.image_name }}:${{ needs.build.outputs.image_tag }}
                container_name: laps
                restart: always
                env_file:
                  - .env
                ports:
                  - "\${HTTP_PORT:-8080}:8080"
            EOF
            
            sudo docker-compose down || true
            
            sudo docker-compose pull
            sudo docker-compose up -d
