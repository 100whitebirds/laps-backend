name: Deploy Application

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            # Создаем рабочую директорию
            mkdir -p ~/laps
            cd ~/laps
            
            # Очищаем директорию перед копированием новых файлов
            rm -rf ./* || true
            
            # Создаем файл с переменными окружения
            cat > .env << EOF
            # Общие настройки приложения
            APP_ENV=${{ secrets.APP_ENV:-production }}
            APP_NAME=${{ secrets.APP_NAME:-laps }}
            
            # HTTP настройки
            HTTP_PORT=${{ secrets.HTTP_PORT:-8080 }}
            
            # Postgres настройки
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST:-localhost }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT:-5432 }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB:-laps }}
            POSTGRES_SSL_MODE=${{ secrets.POSTGRES_SSL_MODE:-disable }}
            POSTGRES_MAX_CONNECTIONS=${{ secrets.POSTGRES_MAX_CONNECTIONS:-10 }}
            POSTGRES_MAX_IDLE_CONNECTIONS=${{ secrets.POSTGRES_MAX_IDLE_CONNECTIONS:-2 }}
            POSTGRES_MAX_LIFETIME=${{ secrets.POSTGRES_MAX_LIFETIME:-1h }}
            
            # JWT настройки
            JWT_SIGNING_KEY=${{ secrets.JWT_SIGNING_KEY }}
            
            # Настройки логгирования
            LOG_LEVEL=${{ secrets.LOG_LEVEL:-info }}
            EOF

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/laps"
          strip_components: 0
      
      - name: Build and run Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/laps
            
            # Останавливаем старый контейнер (если есть)
            sudo docker-compose down || true
            
            # Создаем docker-compose.yml
            cat > sudo docker-compose.yml << EOF
            version: '3.8'
            
            services:
              app:
                build: .
                container_name: laps
                restart: always
                env_file:
                  - .env
                ports:
                  - "${HTTP_PORT:-8080}:8080"
            EOF
            
            # Собираем и запускаем новый контейнер
            sudo docker-compose up -d --build
